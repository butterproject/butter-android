apply plugin: 'com.android.library'
apply plugin: 'hugo'//for method logging (only in debug builds)
apply plugin: 'com.jakewharton.butterknife'
apply from: '../config/gradle/checkstyle.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion rootProject.ext.buildToolsVersion

    def buildNumber = (System.getenv('BUILD_NUMBER') == null ? 0 : System.getenv('BUILD_NUMBER')) as int
    def gitBranch = (System.getenv('GIT_BRANCH') == null ? 'local' : System.getenv('GIT_BRANCH').replace('origin/', ''))
    def releaseType = (System.getenv('RELEASE_TYPE') == null ? 'NONE' : System.getenv('RELEASE_TYPE'))
    def updateUrls = (System.getenv('UPDATE_URLS') == null ? '"http://localhost/android-update.json"' : System.getenv('UPDATE_URLS'))

    publishNonDefault true

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk

        buildConfigField 'Integer', 'BUILD_NUMBER', '' + buildNumber + ''
        buildConfigField 'String', 'GIT_BRANCH', '\"' + gitBranch + '\"'
        buildConfigField 'String', 'RELEASE_TYPE', '\"' + releaseType + '\"'
        buildConfigField 'String[]', 'UPDATE_URLS', '{' + updateUrls + '}'

        versionCode buildNumber
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/beans.xml'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
        lintConfig file('lint.xml')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:multidex:1.0.1'

    compile "com.android.support:support-v4:${rootProject.ext.appCompatVersion}"
    compile "com.android.support:palette-v7:${rootProject.ext.appCompatVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.ext.appCompatVersion}"
    compile "com.android.support:design:${rootProject.ext.appCompatVersion}"

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    compile 'com.jakewharton.timber:timber:4.5.1'
    compile "com.squareup.okhttp3:okhttp:${rootProject.ext.okHttpVersion}"
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    compile 'com.google.code.gson:gson:2.7'
    compile "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"
    compile 'com.uwetrottmann:trakt-java:4.6.2'
    compile 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'

    compile 'com.koushikdutta.async:androidasync:2.1.8'

    compile 'com.github.sv244:torrentstream-android:1.1.1'

    compile 'de.timroes:aXMLRPC:1.8.1'
    compile "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"

    compile 'com.butterproject:vlc-android-sdk:2.0.6'
    compile project(':connectsdk')

    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterknifeVersion}"

    provided "javax.annotation:javax.annotation-api:${rootProject.ext.javaxAnnotationVersion}"
}
